{"ast":null,"code":"var _jsxFileName = \"/Users/azan/Desktop/right_freelancer/infinet-worx/src/data/loading.jsx\",\n  _s = $RefreshSig$();\n// Loading.js\nimport React, { useState, useEffect } from 'react';\nimport '../css/loading.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Loading = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const [per, setPer] = useState(0);\n  const [isCompleted, setIsCompleted] = useState(false);\n  useEffect(() => {\n    const loading = setInterval(() => {\n      setCount(prevCount => {\n        if (prevCount >= 100) {\n          clearInterval(loading);\n          setIsCompleted(true);\n          return 100;\n        }\n        return prevCount + 1;\n      });\n      setPer(prevPer => prevPer >= 400 ? 400 : prevPer + 4);\n    }, 20);\n    return () => clearInterval(loading);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"percent\",\n      children: [count, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 39\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), isCompleted && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text\",\n      children: \"Completed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress\",\n        style: {\n          width: `${per}px`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Loading, \"ZE5yEAU8OxnSv1d8LATrYvuazos=\");\n_c = Loading;\nexport default Loading;\nvar _c;\n$RefreshReg$(_c, \"Loading\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Loading","_s","count","setCount","per","setPer","isCompleted","setIsCompleted","loading","setInterval","prevCount","clearInterval","prevPer","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/Users/azan/Desktop/right_freelancer/infinet-worx/src/data/loading.jsx"],"sourcesContent":["// Loading.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport '../css/loading.css';\r\n\r\nconst Loading = () => {\r\n  const [count, setCount] = useState(0);\r\n  const [per, setPer] = useState(0);\r\n  const [isCompleted, setIsCompleted] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const loading = setInterval(() => {\r\n      setCount((prevCount) => {\r\n        if (prevCount >= 100) {\r\n          clearInterval(loading);\r\n          setIsCompleted(true);\r\n          return 100;\r\n        }\r\n        return prevCount + 1;\r\n      });\r\n\r\n      setPer((prevPer) => (prevPer >= 400 ? 400 : prevPer + 4));\r\n    }, 20);\r\n\r\n    return () => clearInterval(loading);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"loading\">\r\n      <div className=\"percent\">{count}<span>%</span></div>\r\n       {isCompleted && <div className=\"text\">Completed</div>} \r\n       <div className=\"progress-bar\">\r\n        <div className=\"progress\" style={{ width: `${per}px` }}></div>\r\n      </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACQ,GAAG,EAAEC,MAAM,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAErDC,SAAS,CAAC,MAAM;IACd,MAAMW,OAAO,GAAGC,WAAW,CAAC,MAAM;MAChCN,QAAQ,CAAEO,SAAS,IAAK;QACtB,IAAIA,SAAS,IAAI,GAAG,EAAE;UACpBC,aAAa,CAACH,OAAO,CAAC;UACtBD,cAAc,CAAC,IAAI,CAAC;UACpB,OAAO,GAAG;QACZ;QACA,OAAOG,SAAS,GAAG,CAAC;MACtB,CAAC,CAAC;MAEFL,MAAM,CAAEO,OAAO,IAAMA,OAAO,IAAI,GAAG,GAAG,GAAG,GAAGA,OAAO,GAAG,CAAE,CAAC;IAC3D,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAMD,aAAa,CAACH,OAAO,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAKc,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACtBf,OAAA;MAAKc,SAAS,EAAC,SAAS;MAAAC,QAAA,GAAEZ,KAAK,eAACH,OAAA;QAAAe,QAAA,EAAM;MAAC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAClDZ,WAAW,iBAAIP,OAAA;MAAKc,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrDnB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC5Bf,OAAA;QAAKc,SAAS,EAAC,UAAU;QAACM,KAAK,EAAE;UAAEC,KAAK,EAAE,GAAGhB,GAAG;QAAK;MAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CA/BID,OAAO;AAAAqB,EAAA,GAAPrB,OAAO;AAiCb,eAAeA,OAAO;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}